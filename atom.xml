<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>kkren&#39;s blog</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://kkren.me/"/>
  <updated>2018-10-21T14:53:38.552Z</updated>
  <id>https://kkren.me/</id>
  
  <author>
    <name>kkren</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>使用transmission在linux上搭建pt下载环境</title>
    <link href="https://kkren.me/2018/05/transmission-in-linux/"/>
    <id>https://kkren.me/2018/05/transmission-in-linux/</id>
    <published>2018-05-26T12:43:10.000Z</published>
    <updated>2018-10-21T14:53:38.552Z</updated>
    
    <content type="html"><![CDATA[<p>现在在linux服务器上部署的pt下载器主要是aria2， transmission和rtorrent，然而aria2要下载pt的话还需要伪装客户端，rtorrent的webui太丑加载速度还很慢，于是最后选择了transmission。博客中提到的服务器的配置为Intel Atom N2800 2c/4 t 1.86GHz，4Gb DDR3 1066，2T HDD， 位于欧洲，不抗投诉。<a id="more"></a></p><h2 id="安装transmission与deamon"><a href="#安装transmission与deamon" class="headerlink" title="安装transmission与deamon"></a>安装transmission与deamon</h2><p>服务器的系统环境是debian9，所以可以很方便用包管理器安装需要的软件</p><pre><code>apt -y install transmission transmission-deamonsystemctl enable transmission-deamon</code></pre><p>好像没有什么特别的配置要配置的，反正webui里都可以改</p><h2 id="安装修改版的transmission-webui"><a href="#安装修改版的transmission-webui" class="headerlink" title="安装修改版的transmission webui"></a>安装修改版的transmission webui</h2><p><a href="https://github.com/ronggang/transmission-web-control" target="_blank" rel="noopener">项目地址</a>，安装过程也是全自动的</p><pre><code>wget https://github.com/ronggang/transmission-web-control/raw/master/release/install-tr-control.shbash install-tr-control.sh</code></pre><p>接下来输入1然后按回车就可以了<br>然后重启下transmission</p><pre><code>systemctl restart transmission-deamon</code></pre><h2 id="安装-transmission-rss"><a href="#安装-transmission-rss" class="headerlink" title="安装 transmission-rss"></a>安装 transmission-rss</h2><h2 id="使用nginx-反代webui"><a href="#使用nginx-反代webui" class="headerlink" title="使用nginx 反代webui"></a>使用nginx 反代webui</h2><p>transmission的webui没有ssl也没法加密码，所以用nginx反代下，性能更高。我安装的nginx是来自<a href="https://sb.sb/blog/debian-install-nginx-php-mysql/" target="_blank" rel="noopener">烧饼博客上的教程</a>，下面是配置文件</p><pre><code>server {listen 80 default_server;listen [::]:80 default_server;server_name example.com;location /.well-known/acme-challenge {root /var/www/letsencrypt;}location / {return 301 https://$host$request_uri;}}server {listen 443 ssl http2 default_server;listen [::]:443 ssl http2 default_server;server_name example.com;client_max_body_size 10m;server_tokens off;root /var/www/rutorrent;index index.html index.htm index.php;ssl_dhparam /etc/nginx/ssl/dhparam.pem;ssl_protocols TLSv1 TLSv1.1 TLSv1.2;ssl_ciphers &apos;ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS&apos;;ssl_prefer_server_ciphers on;ssl_session_cache shared:SSL:50m;ssl_session_timeout 1d;ssl_certificate /etc/nginx/ssl/fullchain.cer;ssl_certificate_key /etc/nginx/ssl/dl.key;add_header Strict-Transport-Security &quot;max-age=63072000; includeSubDomains; preload&quot;;add_header X-Frame-Options SAMEORIGIN;add_header X-Content-Type-Options nosniff;add_header X-XSS-Protection &quot;1; mode=block&quot;;location / {auth_basic &quot;Restricted&quot;;auth_basic_user_file /etc/nginx/passwd;proxy_pass  http://127.0.0.1:9091;}location ~ \.php$ {fastcgi_pass unix:/run/php/php7.2-fpm.sock;include snippets/fastcgi-php.conf;}access_log /var/log/nginx/rutorrent.access.log;error_log /var/log/nginx/rutorrent.error.log;}</code></pre><p>其中，<code>/etc/nginx/passwd</code>的生成方法是<code>printf &quot;user:$(openssl passwd -crypt password)\n&quot; &gt;&gt; /etc/nginx/passwd</code>。</p><h2 id="最后的效果"><a href="#最后的效果" class="headerlink" title="最后的效果"></a>最后的效果</h2><p><img src="https://kkren.me/images/1540133454051.png" alt="1540133454051"></p><p>真香</p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;现在在linux服务器上部署的pt下载器主要是aria2， transmission和rtorrent，然而aria2要下载pt的话还需要伪装客户端，rtorrent的webui太丑加载速度还很慢，于是最后选择了transmission。博客中提到的服务器的配置为Intel Atom N2800 2c/4 t 1.86GHz，4Gb DDR3 1066，2T HDD， 位于欧洲，不抗投诉。
    
    </summary>
    
    
      <category term="技术" scheme="https://kkren.me/tags/%E6%8A%80%E6%9C%AF/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://kkren.me/2018/05/hello-world/"/>
    <id>https://kkren.me/2018/05/hello-world/</id>
    <published>2018-05-13T12:18:45.148Z</published>
    <updated>2018-05-26T14:10:12.096Z</updated>
    
    <content type="html"><![CDATA[<p>在咕咕咕了很久很久以后，这个破博客又上线了。以前的文章什么都没有了，反正也没几篇。以后写的bug都会放在这里</p><p>2018年5月13日</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在咕咕咕了很久很久以后，这个破博客又上线了。以前的文章什么都没有了，反正也没几篇。以后写的bug都会放在这里&lt;/p&gt;
&lt;p&gt;2018年5月13日&lt;/p&gt;

      
    
    </summary>
    
    
  </entry>
  
</feed>
